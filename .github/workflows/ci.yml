name: ci

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - master
      - dev
    paths-ignore:
      - '.devcontainer/**'
      # - '.github/**'
      - '.vscode/**'
      - '.gitignore'
      - '.npmignore'
      - 'LICENSE'
      - 'README.md'
  push:
    paths-ignore:
      - '.devcontainer/**'
      # - '.github/**'
      - '.vscode/**'
      - '.gitignore'
      - '.npmignore'
      - 'LICENSE'
      - 'README.md'
    branches:
      - main
      - master
      - dev

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build:
    strategy:
      matrix:
        node: [18, 20]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    name: '${{matrix.platform}} / Node.js ${{ matrix.node }}'
    runs-on: ${{matrix.platform}}

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v3
        with:
          version: 8.6.12
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with: 
          toolchain: nightly-2023-12-21
          components: rustfmt
          targets: wasm32-unknown-unknown

      - name: Add rust-src
        run: rustup component add rust-src --toolchain nightly-2023-12-21-x86_64-unknown-linux-gnu

      - name: Set up cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      
      - name: Run checks
        run: ./check.sh

      - name: Lint
        run: pnpm run lint

      - name: Run tests and collect coverage
        run: pnpm run test::coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ env.GITHUB_REPOSITORY }}
          fail_ci_if_error: true